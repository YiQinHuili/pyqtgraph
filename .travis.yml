language: python

# Credit: Original .travis.yml lifted from VisPy

# Here we use anaconda for 2.6 and 3.3, since it provides the simplest
# interface for running different versions of Python. We could also use
# it for 2.7, but the Ubuntu system has installable 2.7 Qt4-GL, which
# allows for more complete testing.
notifications:
  email: false

virtualenv:
    system_site_packages: true


env:
    # Enable python 2 and python 3 builds
    # Note that the 2.6 build doesn't get flake8, and runs old versions of
    # Pyglet and GLFW to make sure we deal with those correctly
    #- PYTHON=2.6 QT=pyqt TEST=standard
    - PYTHON=2.7 QT=pyqt TEST=extra
    - PYTHON=2.7 QT=pyside TEST=standard
    - PYTHON=3.3 QT=pyqt TEST=standard
    - PYTHON=3.3 QT=pyside TEST=standard
    - PYTHON=3.3 QT=pyqt5 TEST=standard


before_install:
    - travis_retry sudo apt-get update;
#     - if [ "${PYTHON}" != "2.7" ]; then
#         wget http://repo.continuum.io/miniconda/Miniconda-2.2.2-Linux-x86_64.sh -O miniconda.sh &&
#         chmod +x miniconda.sh &&
#         ./miniconda.sh -b &&
#         export PATH=/home/$USER/anaconda/bin:$PATH &&
#         conda update --yes conda &&
#         travis_retry sudo apt-get -qq -y install libgl1-mesa-dri;
#       fi;


install:
    # Dependencies
    - if [ "${PYTHON}" == "2.7" ]; then
        travis_retry sudo apt-get -qq -y install python-numpy;
        sudo pip install pytest &&
        sudo pip install flake8;
      else
        travis_retry sudo apt-get -qq -y install python3-numpy python3-pip;
        sudo pip3 install pytest &&
        sudo pip3 install flake8;
      fi;
    
    # Qt
    - if [ "${PYTHON}" == "2.7" ]; then
        if [ ${QT} == 'pyqt' ]; then
          travis_retry sudo apt-get -qq -y install python-qt4 python-qt4-gl;
        else
          travis_retry sudo apt-get -qq -y install python-pyside.qtcore python-pyside.qtgui python-pyside.qtsvg python-pyside.qtopengl;
        fi;
      elif [ "${PYTHON}" == "3.3" ]; then
        if [ ${QT} == 'pyqt' ]; then
          travis_retry sudo apt-get -qq -y install python3-pyqt4;
        elif [ ${QT} == 'pyside' ]; then
          travis_retry sudo apt-get -qq -y install python3-pyside;
        else
          sudo bash -c "echo 'deb http://us.archive.ubuntu.com/ubuntu/ saucy main restricted' >> /etc/apt/sources.list" &&
          sudo bash -c "echo 'deb http://us.archive.ubuntu.com/ubuntu/ saucy universe' >> /etc/apt/sources.list" &&
          sudo apt-get update &&
          sudo apt-get install python3-pyqt5;
        fi;
      else
        conda create -n testenv --yes --quiet pip python=$PYTHON &&
        source activate testenv &&
        if [ ${QT} == 'pyqt' ]; then
          conda install --yes --quiet pyside;
        else
          conda install --yes --quiet pyside;
        fi;
      fi;

    # Install PyOpenGL
    - if [ "${DEPS}" == "full" ]; then
        if [ "${PYTHON}" == "2.7" ]; then
          echo "Using OpenGL stable version (repos)";
          travis_retry sudo apt-get -qq -y install python-opengl;
        else
          echo "Using OpenGL stable version (pip)";
          pip install -q PyOpenGL;
        fi;
      fi;

    # Debugging helpers
    - uname -a
    - cat /etc/issue
    - python${PYTHON} --version
    - apt-cache search python3-pyqt
    - apt-cache search python3-pyside
    - apt-cache search pytest
    

before_script:
    # We need to create a (fake) display on Travis, let's use a funny resolution
    - export DISPLAY=:99.0
    - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render
    
    # Make sure everyone uses the correct python
    - mkdir ~/bin && ln -s `which python${PYTHON}` ~/bin/python
    - export PATH=/home/travis/bin:$PATH
    - which python
    - python --version

script:
    # Run unit tests
    - python setup.py test
    
    # check line endings
    - if [ "${TEST}" == "extra" ]; then
        find ./ -name "*.py" | xargs file | grep CRLF; out=$?; 
        if [ ${out} == 0 ]; 
            then false;
            else true;
        fi;
      fi;

    # Check for style issues
    - if [ "${TEST}" == "extra" ]; then
        python setup.py style;
      fi;
    
    # Check install works
    - sudo python setup.py --quiet install
    - cd ..; echo "import pyqtgraph.examples" | python
    
    # Check double-install fails
    - cd pyqtgraph && sudo python setup.py --quiet install; if [ $? == 0 ]; then false; else true; fi;

